'''
SCons tool build instructions
'''
import sys
sys.path[:0] = ['sconsparts/src']
from parts import *

# Set up version information
SetOptionDefault('COMPANY_NAME', 'Eugene Leskinen')
SetOptionDefault('PRODUCT_NAME', 'Drag & drop plug-in for FAR manager')
SetOptionDefault('LEGAL_COPYRIGHT', '2005-2018 Eugene Leskinen et al.')
SetOptionDefault('FAR_MINIMAL_BUILD_SUPPORTED', '4700')
SetOptionDefault('PRODUCT_VERSION_STRING', '3.0.85.$FAR_MINIMAL_BUILD_SUPPORTED')

# Need to generate version.h file to be used by MSVC projects:
VERSION_H_TEMPLATE="""
#define PRODUCT_VERSION $PRODUCT_VERSION
#define PRODUCT_VERSION_STRING "$PRODUCT_VERSION_STRING"
#define FILE_VERSION PRODUCT_VERSION
#define FILE_VERSION_STRING PRODUCT_VERSION_STRING

#define COMPANY_NAME "$COMPANY_NAME"
#define PRODUCT_NAME "$PRODUCT_NAME"
#define LEGAL_COPYRIGHT "$LEGAL_COPYRIGHT"
/* file automagically generated */
"""

def version_h_action(target, source, env):
    with open(str(target[0]), "w") as target_file:
        target_file.write(env.subst("$VERSION_H_TEMPLATE") + '\n')

Builder(
    action=Action(
        version_h_action,
        cmdstr='Generating $TARGET',
        varlist=['PRODUCT_VERSION', 'PRODUCT_VERSION_STRING',
                 'COMPANY_NAME', 'PRODUCT_NAME', 'LEGAL_COPYRIGHT',
                 'VERSION_H_TEMPLATE']
        )
    )(DefaultEnvironment(), 'msvs2015/generated/version.h', [],
        VERSION_H_TEMPLATE=VERSION_H_TEMPLATE)
Alias('build::', Dir('msvs2015/generated'))

# Enable smart logging
SetOptionDefault('LOGGER', '$TEXT_LOGGER')
SetOptionDefault('PART_LOGGER', '$PART_TEXT_LOGGER')
SetOptionDefault('CONFIG', 'release')
SetOptionDefault('CPPDEFINES', [])

# The plugin uses unicode inside. When MBCS is used it is specified explicitly
SetOptionDefault('CPPDEFINES', ['UNICODE', '_UNICODE'
##        , 'ENABLE_TRACE' # Uncomment this line to enable logging in Release config
])

SetOptionDefault('INSTALL_ROOT', '#install')
SetOptionDefault('INSTALL_BIN', '${INSTALL_ROOT}/${CONFIG}/drgndrop/')
SetOptionDefault('SDK_LIB_ROOT', '${SDK_ROOT}/${CONFIG}_${TARGET_PLATFORM}/lib')
SetOptionDefault('SDK_BIN_ROOT', '${SDK_ROOT}/${CONFIG}_${TARGET_PLATFORM}/bin')
SetOptionDefault('BUILD_DIR','$BUILD_DIR_ROOT/${CONFIG}_${TARGET_PLATFORM}/${ALIAS}')

Part(
    alias='plugin',
    parts_file='plugin/plugin.parts',
    platform_independent=True,
    package_group='plugin',
    )
Part(
    alias='common',
    parts_file='common/common.parts',
    platform_independent=True,
    package_group='plugin',
    )
Part(
    alias='dll',
    parts_file='dll/dll.parts',
    platform_independent=True,
    package_group='plugin',
    )
Part(
    alias='hook',
    parts_file='hook/hook.parts',
    platform_independent=True,
    package_group='plugin',
    )
Part(
    alias='holder',
    parts_file='holder/holder.parts',
    platform_independent=True,
    package_group='plugin',
    )
Part(
    alias='texts',
    parts_file='texts/texts.parts',
    platform_independent=True,
    package_group='plugin',
    ADDITIONAL_DDLNG='#msvs2015/generated/ddlng.h'
    )
Part(
    alias='tut',
    parts_file='tut.parts',
    platform_independent=True,
    )

Alias('pack', DefaultEnvironment().ZipPackage('drgndrop', ['plugin']))
Alias('farinstall', DefaultEnvironment().DirInstall(r'D:\personal\far_3.0.4900\Debug.64.vc\Plugins\Dragndrop', ['plugin']))
# vim: set et ts=4 sw=4 ai ft=python :


