from parts import *

# Set up version information
SetOptionDefault('COMPANY_NAME', 'Eugene Leskinen')
SetOptionDefault('PRODUCT_NAME', 'Drag & drop plug-in for FAR manage')
SetOptionDefault('LEGAL_COPYRIGHT', '2005-2011 Eugene Leskinen')
SetOptionDefault('PRODUCT_VERSION_STRING', '2.0.0.${SVN_REVISION}')

# Enable smart logging
SetOptionDefault('LOGGER', '$TEXT_LOGGER')
SetOptionDefault('PART_LOGGER', '$PART_TEXT_LOGGER')
SetOptionDefault('CONFIG', 'release')
SetOptionDefault('CPPDEFINES', [])

# By default we allways build 32-bit version
# SetOptionDefault('TARGET_PLATFORM', SystemPlatform(os='win32',arch='x86'))

_ansiOrUnicode = lambda env: 'unicode' if env.get('UNICODE') else 'ansi'
_ansiOrUnicodeShort = lambda env: _ansiOrUnicode(env)[0]

SetOptionDefault('_ansiOrUnicode', _ansiOrUnicode)
SetOptionDefault('_ansiOrUnicodeShort', _ansiOrUnicodeShort)
SetOptionDefault('ANSI_OR_UNICODE', '${_ansiOrUnicode(__env__)}')
SetOptionDefault('A_OR_U', '${_ansiOrUnicodeShort(__env__)}')

# The plugin uses unicode inside. When MBCS is used it specified explicitly
SetOptionDefault('CPPDEFINES', ['UNICODE', '_UNICODE'])

SetOptionDefault('INSTALL_ROOT', '#install')
SetOptionDefault('INSTALL_BIN', '${INSTALL_ROOT}/${CONFIG}_${ANSI_OR_UNICODE}/drgndrop/')
SetOptionDefault('SDK_LIB_ROOT', '${SDK_ROOT}/${CONFIG}_${TARGET_PLATFORM}_${ANSI_OR_UNICODE}/lib')
SetOptionDefault('SDK_BIN_ROOT', '${SDK_ROOT}/${CONFIG}_${TARGET_PLATFORM}_${ANSI_OR_UNICODE}/bin')
SetOptionDefault('BUILD_DIR','$BUILD_DIR_ROOT/${CONFIG}_${TARGET_PLATFORM}_${ANSI_OR_UNICODE}/$ALIAS')

def forArch(arch, **kw):
    platform = SystemPlatform("win32", arch)
    Part(
        alias='common_' + arch,
        parts_file='common/common.parts',
        TARGET_PLATFORM=platform,
        **kw
        )
    Part(
        alias='dll_' + arch,
        parts_file='dll/dll.parts',
        TARGET_PLATFORM=platform,
        **kw
        )
    Part(
        alias='holder_' + arch,
        parts_file='holder/holder.parts',
        TARGET_PLATFORM=platform,
        **kw
        )
    Part(
        alias='hook_' + arch,
        parts_file='hook/hook.parts',
        TARGET_PLATFORM=platform,
        **kw
        )
    Part(
        alias='plugin_' + arch,
        parts_file='plugin/plugin.parts',
        TARGET_PLATFORM=platform,
        **kw
        )
Part(
    alias='texts_',
    parts_file='texts/texts.parts',
    platform_independent=True,
#    TARGET_PLATFORM=SystemPlatform('win32', 'any'),
    )


forArch('x86')
forArch('x86_64')

##env = Environment(tools = ['default', 'packaging'])
##inst = env.Install(r'c:\fardebug\plugins', DefaultEnvironment().Entry('$INSTALL_BIN'))
##for item in inst:
##    print item.abspath
##pack = env.Package(
##        NAME = 'dragndrop',
##        VERSION = '2.0.0',
##        DESCRIPTION = 'Empty',
##        SUMMARY = 'Summary',
##        VENDOR = 'Karbazol',
##        X_MSI_LANGUAGE = 'en',
##        PACKAGETYPE = 'msi'
##        )
##env.Alias('pack', pack)

# vim: set et ts=4 sw=4 ai ft=python :

